{"ast":null,"code":"import{useFeth}from'../../hooks/useFetch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ArticleFormFields=function ArticleFormFields(_ref){var formState=_ref.formState,handleChange=_ref.handleChange;var authorsFetch=useFeth('authors');return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",value:formState.title,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Text\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"text\",value:formState.text,onChange:handleChange,rows:5})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Author\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"author\",value:formState.author?formState.author.id:'',onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select\"}),authorsFetch.records.map(function(author){return/*#__PURE__*/_jsx(\"option\",{value:author.id,children:author.name},author.id);})]})]})]});};","map":{"version":3,"sources":["C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/src/pages/Article/FormFields.tsx"],"names":["useFeth","ArticleFormFields","formState","handleChange","authorsFetch","title","text","author","id","records","map","name"],"mappings":"AAAA,OAASA,OAAT,KAAwB,sBAAxB,C,wFAMA,MAAO,IAAMC,CAAAA,iBAAmC,CAAG,QAAtCA,CAAAA,iBAAsC,MAG7C,IAFJC,CAAAA,SAEI,MAFJA,SAEI,CADJC,YACI,MADJA,YACI,CACJ,GAAMC,CAAAA,YAAY,CAAGJ,OAAO,CAAS,SAAT,CAA5B,CAEA,mBACE,oCACE,oCACE,gCADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAEE,SAAS,CAACG,KAHnB,CAIE,QAAQ,CAAEF,YAJZ,EAFF,GADF,cAUE,oCACE,+BADF,cAEE,iBACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAED,SAAS,CAACI,IAFnB,CAGE,QAAQ,CAAEH,YAHZ,CAIE,IAAI,CAAE,CAJR,EAFF,GAVF,cAmBE,oCACE,iCADF,cAEE,gBACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAED,SAAS,CAACK,MAAV,CAAmBL,SAAS,CAACK,MAAV,CAAiBC,EAApC,CAAyC,EAFlD,CAGE,QAAQ,CAAEL,YAHZ,wBAKE,eAAQ,KAAK,CAAC,EAAd,oBALF,CAMGC,YAAY,CAACK,OAAb,CAAqBC,GAArB,CAAyB,SAACH,MAAD,qBACxB,eAAwB,KAAK,CAAEA,MAAM,CAACC,EAAtC,UACGD,MAAM,CAACI,IADV,EAAaJ,MAAM,CAACC,EAApB,CADwB,EAAzB,CANH,GAFF,GAnBF,GADF,CAqCD,CA3CM","sourcesContent":["import { useFeth } from '../../hooks/useFetch';\r\nimport { FormFieldsProps } from '../../interfaces/PagesProps';\r\nimport { Article, Author } from '../../interfaces/RecordEntities';\r\n\r\ntype IProps = FormFieldsProps<Article>;\r\n\r\nexport const ArticleFormFields: React.FC<IProps> = ({\r\n  formState,\r\n  handleChange,\r\n}) => {\r\n  const authorsFetch = useFeth<Author>('authors');\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>Title</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={formState.title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Text</label>\r\n        <textarea\r\n          name=\"text\"\r\n          value={formState.text}\r\n          onChange={handleChange}\r\n          rows={5}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Author</label>\r\n        <select\r\n          name=\"author\"\r\n          value={formState.author ? formState.author.id : ''}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"\">Select</option>\r\n          {authorsFetch.records.map((author) => (\r\n            <option key={author.id} value={author.id}>\r\n              {author.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n          </div>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}
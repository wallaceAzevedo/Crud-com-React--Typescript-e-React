{"ast":null,"code":"import _slicedToArray from\"C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export var Page;(function(Page){Page[\"Articles\"]=\"Articles\";Page[\"Authors\"]=\"Authors\";})(Page||(Page={}));var Context=/*#__PURE__*/createContext({page:Page.Articles,setPage:function setPage(page){return console.warn('no page provider');}});export var usePage=function usePage(){return useContext(Context);};export var PageStore=function PageStore(_ref){var children=_ref.children;var _useState=useState(Page.Articles),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];return/*#__PURE__*/_jsx(Context.Provider,{value:{page:page,setPage:setPage},children:children});};","map":{"version":3,"sources":["C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/src/contexts/Page.tsx"],"names":["createContext","useContext","useState","Page","Context","page","Articles","setPage","console","warn","usePage","PageStore","children"],"mappings":"+KAAA,OAASA,aAAT,CAAwBC,UAAxB,CAAoCC,QAApC,KAAoD,OAApD,C,2CAEA,UAAYC,CAAAA,IAAZ,C,UAAYA,I,EAAAA,I,wBAAAA,I,yBAAAA,I,GAAAA,I,MAUZ,GAAMC,CAAAA,OAAO,cAAGJ,aAAa,CAAc,CACvCK,IAAI,CAAEF,IAAI,CAACG,QAD4B,CAEvCC,OAAO,CAAC,iBAACF,IAAD,QAAUG,CAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb,CAAV,EAF+B,CAAd,CAA7B,CAKA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,SAAMT,CAAAA,UAAU,CAACG,OAAD,CAAhB,EAAhB,CAEP,MAAO,IAAMO,CAAAA,SAAmB,CAAG,QAAtBA,CAAAA,SAAsB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACjD,cAAwBV,QAAQ,CAACC,IAAI,CAACG,QAAN,CAAhC,wCAAOD,IAAP,eAAaE,OAAb,eACA,mBACI,KAAC,OAAD,CAAS,QAAT,EAAmB,KAAK,CAAE,CAAEF,IAAI,CAAJA,IAAF,CAAQE,OAAO,CAAPA,OAAR,CAA1B,UAA8CK,QAA9C,EADJ,CAIH,CANM","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nexport enum Page {\r\n    Articles = 'Articles',\r\n    Authors ='Authors',\r\n}\r\n\r\ntype ContextType = {\r\n    page: Page;\r\n    setPage: (page: Page) => void;\r\n}\r\n\r\nconst Context = createContext<ContextType>({\r\n    page: Page.Articles,\r\n    setPage:(page) => console.warn('no page provider'),\r\n});\r\n\r\nexport const usePage = ( ) =>useContext(Context);\r\n\r\nexport const PageStore: React.FC = ({ children }) => {\r\n    const [page, setPage] = useState(Page.Articles);\r\n    return (\r\n        <Context.Provider  value={{ page, setPage }}>{children}\r\n        </Context.Provider>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}
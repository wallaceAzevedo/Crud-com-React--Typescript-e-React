{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Crud-com-React--Typescript-e-React\\\\src\\\\contexts\\\\Page.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let Page;\n\n(function (Page) {\n  Page[\"Articles\"] = \"Articles\";\n  Page[\"Authors\"] = \"Authors\";\n})(Page || (Page = {}));\n\nconst Context = /*#__PURE__*/createContext({\n  page: Page.Articles,\n  setPage: page => console.warn('no page provider')\n});\nexport const usePage = () => {\n  _s();\n\n  return useContext(Context);\n};\n\n_s(usePage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const PageStore = ({\n  children\n}) => {\n  _s2();\n\n  const [page, setPage] = useState(Page.Articles);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      page,\n      setPage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(PageStore, \"mf5NBvvWAC9qnCo5E8yYaYUeePk=\");\n\n_c = PageStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageStore\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/src/contexts/Page.tsx"],"names":["createContext","useContext","useState","Page","Context","page","Articles","setPage","console","warn","usePage","PageStore","children"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,WAAYC,IAAZ;;WAAYA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;GAAAA,I,KAAAA,I;;AAUZ,MAAMC,OAAO,gBAAGJ,aAAa,CAAc;AACvCK,EAAAA,IAAI,EAAEF,IAAI,CAACG,QAD4B;AAEvCC,EAAAA,OAAO,EAAEF,IAAD,IAAUG,OAAO,CAACC,IAAR,CAAa,kBAAb;AAFqB,CAAd,CAA7B;AAKA,OAAO,MAAMC,OAAO,GAAG;AAAA;;AAAA,SAAMT,UAAU,CAACG,OAAD,CAAhB;AAAA,CAAhB;;GAAMM,O;;AAEb,OAAO,MAAMC,SAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjD,QAAM,CAACP,IAAD,EAAOE,OAAP,IAAkBL,QAAQ,CAACC,IAAI,CAACG,QAAN,CAAhC;AACA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAmB,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAA1B;AAAA,cAA8CK;AAA9C;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CANM;;IAAMD,S;;KAAAA,S","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nexport enum Page {\r\n    Articles = 'Articles',\r\n    Authors ='Authors',\r\n}\r\n\r\ntype ContextType = {\r\n    page: Page;\r\n    setPage: (page: Page) => void;\r\n}\r\n\r\nconst Context = createContext<ContextType>({\r\n    page: Page.Articles,\r\n    setPage:(page) => console.warn('no page provider'),\r\n});\r\n\r\nexport const usePage = ( ) =>useContext(Context);\r\n\r\nexport const PageStore: React.FC = ({ children }) => {\r\n    const [page, setPage] = useState(Page.Articles);\r\n    return (\r\n        <Context.Provider  value={{ page, setPage }}>{children}\r\n        </Context.Provider>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}
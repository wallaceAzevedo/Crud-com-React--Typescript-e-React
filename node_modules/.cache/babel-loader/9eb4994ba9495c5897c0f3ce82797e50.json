{"ast":null,"code":"import{useEffect}from'react';import{RecordNew}from'./New';import{RecordEdit}from'./Edit';import{useMutation}from'../../hooks/useMutation';import{Status}from'../../components/Status';import{RecordError}from'../../components/RecordError';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var RecordMutations=function RecordMutations(_ref){var FormFields=_ref.FormFields,activeRecord=_ref.activeRecord,apiPath=_ref.apiPath,callback=_ref.callback;var _useMutation=useMutation(apiPath,callback),create=_useMutation.create,update=_useMutation.update,remove=_useMutation.remove,processing=_useMutation.processing,success=_useMutation.success,error=_useMutation.error,setError=_useMutation.setError;useEffect(function(){if(activeRecord.id){setError(undefined);}},[activeRecord,setError]);return/*#__PURE__*/_jsxs(\"div\",{className:\"mutations\",children:[error&&/*#__PURE__*/_jsx(RecordError,{error:error}),activeRecord.id?/*#__PURE__*/_jsx(RecordEdit,{FormFields:FormFields,activeRecord:activeRecord,update:update,remove:remove,success:success}):/*#__PURE__*/_jsx(RecordNew,{FormFields:FormFields,activeRecord:activeRecord,create:create,success:success}),processing&&/*#__PURE__*/_jsx(Status,{text:\"processing...\"})]});};","map":{"version":3,"sources":["C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/src/pages/Record/Mutations.tsx"],"names":["useEffect","RecordNew","RecordEdit","useMutation","Status","RecordError","RecordMutations","FormFields","activeRecord","apiPath","callback","create","update","remove","processing","success","error","setError","id","undefined"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CAGA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,UAAT,KAA2B,QAA3B,CACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,MAAT,KAAuB,yBAAvB,CACA,OAASC,WAAT,KAA4B,8BAA5B,C,wFAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAKA,IAJ3BC,CAAAA,UAI2B,MAJ3BA,UAI2B,CAH3BC,YAG2B,MAH3BA,YAG2B,CAF3BC,OAE2B,MAF3BA,OAE2B,CAD3BC,QAC2B,MAD3BA,QAC2B,CAC7B,iBAQIP,WAAW,CAAIM,OAAJ,CAAaC,QAAb,CARf,CACEC,MADF,cACEA,MADF,CAEEC,MAFF,cAEEA,MAFF,CAGEC,MAHF,cAGEA,MAHF,CAIEC,UAJF,cAIEA,UAJF,CAKEC,OALF,cAKEA,OALF,CAMEC,KANF,cAMEA,KANF,CAOEC,QAPF,cAOEA,QAPF,CAUAjB,SAAS,CAAC,UAAM,CACd,GAAIQ,YAAY,CAACU,EAAjB,CAAqB,CACnBD,QAAQ,CAACE,SAAD,CAAR,CACD,CACF,CAJQ,CAIN,CAACX,YAAD,CAAeS,QAAf,CAJM,CAAT,CAMA,mBACE,aAAK,SAAS,CAAC,WAAf,WACGD,KAAK,eAAG,KAAC,WAAD,EAAa,KAAK,CAAEA,KAApB,EADX,CAEGR,YAAY,CAACU,EAAb,cACC,KAAC,UAAD,EACA,UAAU,CAAEX,UADZ,CAEA,YAAY,CAAEC,YAFd,CAGA,MAAM,CAAEI,MAHR,CAIA,MAAM,CAAEC,MAJR,CAKA,OAAO,CAAEE,OALT,EADD,cASC,KAAC,SAAD,EACA,UAAU,CAAER,UADZ,CAEA,YAAY,CAAEC,YAFd,CAGA,MAAM,CAAEG,MAHR,CAIA,OAAO,CAAEI,OAJT,EAXJ,CAkBGD,UAAU,eAAI,KAAC,MAAD,EAAQ,IAAI,CAAC,eAAb,EAlBjB,GADF,CAsBD,CA5CM","sourcesContent":["import { useEffect } from 'react';\r\nimport { Record } from '../../interfaces/RecordEntities';\r\nimport { RecordMutationsProps } from '../../interfaces/PagesProps';\r\nimport { RecordNew } from './New';\r\nimport { RecordEdit } from './Edit';\r\nimport { useMutation } from '../../hooks/useMutation';\r\nimport { Status } from '../../components/Status';\r\nimport { RecordError } from '../../components/RecordError';\r\n\r\nexport const RecordMutations = <T extends Record>({\r\n    FormFields,\r\n    activeRecord,\r\n    apiPath,\r\n    callback,\r\n}: RecordMutationsProps<T>) => {\r\n  const { \r\n    create, \r\n    update, \r\n    remove,\r\n    processing,\r\n    success,\r\n    error,\r\n    setError\r\n  } = useMutation<T>(apiPath, callback);\r\n\r\n  useEffect(() => {\r\n    if (activeRecord.id) {\r\n      setError(undefined);\r\n    }\r\n  }, [activeRecord, setError]);\r\n\r\n  return (\r\n    <div className=\"mutations\">\r\n      {error &&<RecordError error={error}/>}\r\n      {activeRecord.id ? (\r\n        <RecordEdit<T> \r\n        FormFields={FormFields} \r\n        activeRecord={activeRecord}\r\n        update={update}\r\n        remove={remove}\r\n        success={success}\r\n        />\r\n      ) : (\r\n        <RecordNew<T> \r\n        FormFields={FormFields} \r\n        activeRecord={activeRecord}\r\n        create={create}\r\n        success={success}\r\n        />\r\n      )}\r\n      {processing && <Status text=\"processing...\"/>}\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Crud-com-React--Typescript-e-React\\\\src\\\\pages\\\\Record\\\\List.tsx\",\n    _s = $RefreshSig$();\n\nimport { usePage } from '../../contexts/Page';\nimport { Status } from '../../components/Status';\nimport { RecordError } from '../../components/RecordError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecordList = ({\n  ListItem,\n  records,\n  emptyRecord,\n  activeRecord,\n  setActiveRecord,\n  loading,\n  error\n}) => {\n  _s();\n\n  const {\n    page\n  } = usePage();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [error && /*#__PURE__*/_jsxDEV(RecordError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bt-new\",\n        onClick: () => setActiveRecord(emptyRecord),\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: records.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: record.id === (activeRecord === null || activeRecord === void 0 ? void 0 : activeRecord.id) ? 'active' : '',\n          onClick: () => setActiveRecord(record),\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            record: record\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, record.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Status, {\n      text: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecordList, \"1NgSF7CyM5TR06ySrOcX4K4G+RI=\", false, function () {\n  return [usePage];\n});\n\n_c = RecordList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordList\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/src/pages/Record/List.tsx"],"names":["usePage","Status","RecordError","RecordList","ListItem","records","emptyRecord","activeRecord","setActiveRecord","loading","error","page","map","record","id"],"mappings":";;;AAEA,SAASA,OAAT,QAAwB,qBAAxB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAoB;AAC1CC,EAAAA,QAD0C;AAE1CC,EAAAA,OAF0C;AAG1CC,EAAAA,WAH0C;AAI1CC,EAAAA,YAJ0C;AAK1CC,EAAAA,eAL0C;AAM1CC,EAAAA,OAN0C;AAO1CC,EAAAA;AAP0C,CAApB,KAQE;AAAA;;AACxB,QAAM;AAACC,IAAAA;AAAD,MAASX,OAAO,EAAtB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACDU,KAAK,iBAAI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YADR,eAEF;AAAA,8BACE;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,MAAMH,eAAe,CAACF,WAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA,kBACGD,OAAO,CAACO,GAAR,CAAaC,MAAD,iBACX;AAEE,UAAA,SAAS,EAAEA,MAAM,CAACC,EAAP,MAAcP,YAAd,aAAcA,YAAd,uBAAcA,YAAY,CAAEO,EAA5B,IAAiC,QAAjC,GAA4C,EAFzD;AAGE,UAAA,OAAO,EAAE,MAAMN,eAAe,CAACK,MAAD,CAHhC;AAAA,iCAKE,QAAC,QAAD;AAAU,YAAA,MAAM,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AALF,WACOA,MAAM,CAACC,EADd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFE,EAmBDL,OAAO,iBAAI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAnBV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAlCM;;GAAMN,U;UASMH,O;;;KATNG,U","sourcesContent":["import { Record} from '../../interfaces/RecordEntities';\r\nimport {RecordListProps } from '../../interfaces/PagesProps';\r\nimport { usePage } from '../../contexts/Page';\r\nimport { Status } from '../../components/Status';\r\nimport { RecordError } from '../../components/RecordError';\r\n\r\nexport const RecordList = <T extends Record >({\r\n    ListItem,\r\n    records,\r\n    emptyRecord,\r\n    activeRecord,\r\n    setActiveRecord,\r\n    loading,\r\n    error,\r\n}: RecordListProps <T> ) => {\r\n    const {page} = usePage();\r\n\r\n    return (\r\n        <div className=\"list\">\r\n      {error && <RecordError error={error} />}\r\n      <div>\r\n        <h2>{page}</h2>\r\n        <button className=\"bt-new\" onClick={() => setActiveRecord(emptyRecord)}>\r\n          New\r\n        </button>\r\n        <ul>\r\n          {records.map((record) => (\r\n            <li\r\n              key={record.id}\r\n              className={record.id === activeRecord?.id ? 'active' : ''}\r\n              onClick={() => setActiveRecord(record)}\r\n            >\r\n              <ListItem record={record} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {loading && <Status text=\"Loading...\" />}\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}
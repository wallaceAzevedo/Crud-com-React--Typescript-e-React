{"ast":null,"code":"import{usePage}from'../../contexts/Page';import{Status}from'../../components/Status';import{RecordError}from'../../components/RecordError';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var RecordList=function RecordList(_ref){var ListItem=_ref.ListItem,records=_ref.records,emptyRecord=_ref.emptyRecord,activeRecord=_ref.activeRecord,setActiveRecord=_ref.setActiveRecord,loading=_ref.loading,error=_ref.error;var _usePage=usePage(),page=_usePage.page;return/*#__PURE__*/_jsxs(\"div\",{className:\"list\",children:[error&&/*#__PURE__*/_jsx(RecordError,{error:error}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:page}),/*#__PURE__*/_jsx(\"button\",{className:\"bt-new\",onClick:function onClick(){return setActiveRecord(emptyRecord);},children:\"New\"}),/*#__PURE__*/_jsx(\"ul\",{children:records.map(function(record){return/*#__PURE__*/_jsx(\"li\",{className:record.id===(activeRecord===null||activeRecord===void 0?void 0:activeRecord.id)?'active':'',onClick:function onClick(){return setActiveRecord(record);},children:/*#__PURE__*/_jsx(ListItem,{record:record})},record.id);})})]}),loading&&/*#__PURE__*/_jsx(Status,{text:\"Loading...\"})]});};","map":{"version":3,"sources":["C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/src/pages/Record/List.tsx"],"names":["usePage","Status","RecordError","RecordList","ListItem","records","emptyRecord","activeRecord","setActiveRecord","loading","error","page","map","record","id"],"mappings":"AAEA,OAASA,OAAT,KAAwB,qBAAxB,CACA,OAASC,MAAT,KAAuB,yBAAvB,CACA,OAASC,WAAT,KAA4B,8BAA5B,C,wFAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAQE,IAPxBC,CAAAA,QAOwB,MAPxBA,QAOwB,CANxBC,OAMwB,MANxBA,OAMwB,CALxBC,WAKwB,MALxBA,WAKwB,CAJxBC,YAIwB,MAJxBA,YAIwB,CAHxBC,eAGwB,MAHxBA,eAGwB,CAFxBC,OAEwB,MAFxBA,OAEwB,CADxBC,KACwB,MADxBA,KACwB,CACxB,aAAeV,OAAO,EAAtB,CAAOW,IAAP,UAAOA,IAAP,CAEA,mBACI,aAAK,SAAS,CAAC,MAAf,WACDD,KAAK,eAAI,KAAC,WAAD,EAAa,KAAK,CAAEA,KAApB,EADR,cAEF,oCACE,oBAAKC,IAAL,EADF,cAEE,eAAQ,SAAS,CAAC,QAAlB,CAA2B,OAAO,CAAE,yBAAMH,CAAAA,eAAe,CAACF,WAAD,CAArB,EAApC,iBAFF,cAKE,oBACGD,OAAO,CAACO,GAAR,CAAY,SAACC,MAAD,qBACX,WAEE,SAAS,CAAEA,MAAM,CAACC,EAAP,IAAcP,YAAd,SAAcA,YAAd,iBAAcA,YAAY,CAAEO,EAA5B,EAAiC,QAAjC,CAA4C,EAFzD,CAGE,OAAO,CAAE,yBAAMN,CAAAA,eAAe,CAACK,MAAD,CAArB,EAHX,uBAKE,KAAC,QAAD,EAAU,MAAM,CAAEA,MAAlB,EALF,EACOA,MAAM,CAACC,EADd,CADW,EAAZ,CADH,EALF,GAFE,CAmBDL,OAAO,eAAI,KAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,EAnBV,GADJ,CAuBH,CAlCM","sourcesContent":["import { Record} from '../../interfaces/RecordEntities';\r\nimport {RecordListProps } from '../../interfaces/PagesProps';\r\nimport { usePage } from '../../contexts/Page';\r\nimport { Status } from '../../components/Status';\r\nimport { RecordError } from '../../components/RecordError';\r\n\r\nexport const RecordList = <T extends Record >({\r\n    ListItem,\r\n    records,\r\n    emptyRecord,\r\n    activeRecord,\r\n    setActiveRecord,\r\n    loading,\r\n    error,\r\n}: RecordListProps <T> ) => {\r\n    const {page} = usePage();\r\n\r\n    return (\r\n        <div className=\"list\">\r\n      {error && <RecordError error={error} />}\r\n      <div>\r\n        <h2>{page}</h2>\r\n        <button className=\"bt-new\" onClick={() => setActiveRecord(emptyRecord)}>\r\n          New\r\n        </button>\r\n        <ul>\r\n          {records.map((record) => (\r\n            <li\r\n              key={record.id}\r\n              className={record.id === activeRecord?.id ? 'active' : ''}\r\n              onClick={() => setActiveRecord(record)}\r\n            >\r\n              <ListItem record={record} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {loading && <Status text=\"Loading...\" />}\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Crud-com-React--Typescript-e-React\\\\src\\\\pages\\\\Record\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useFetch } from '../../hooks/useFetch';\nimport { RecordList } from './List';\nimport { RecordMutations } from './Mutations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecordIndex = ({\n  apiPath,\n  apiOptions,\n  ListItem,\n  FormFields,\n  emptyRecord\n}) => {\n  _s();\n\n  const [activeRecord, setActiveRecord] = useState(emptyRecord);\n  const {\n    records,\n    setVersion,\n    loading,\n    error\n  } = useFetch(apiPath, apiOptions);\n\n  const callback = () => {\n    setVersion(+new Date());\n    setActiveRecord(emptyRecord);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(RecordList, {\n        ListItem: ListItem,\n        records: records,\n        emptyRecord: emptyRecord,\n        activeRecord: activeRecord,\n        setActiveRecord: setActiveRecord,\n        loading: loading,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecordMutations, {\n        FormFields: FormFields,\n        activeRecord: activeRecord,\n        apiPath: apiPath,\n        callback: callback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecordIndex, \"hn2gJoY4cZB99K5WQlLtci9RSwc=\", false, function () {\n  return [useFetch];\n});\n\n_c = RecordIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordIndex\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/src/pages/Record/index.tsx"],"names":["useState","useFetch","RecordList","RecordMutations","RecordIndex","apiPath","apiOptions","ListItem","FormFields","emptyRecord","activeRecord","setActiveRecord","records","setVersion","loading","error","callback","Date"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,eAAT,QAAgC,aAAhC;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAmB;AAC5CC,EAAAA,OAD4C;AAE5CC,EAAAA,UAF4C;AAG5CC,EAAAA,QAH4C;AAI5CC,EAAAA,UAJ4C;AAK5CC,EAAAA;AAL4C,CAAnB,KAMA;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAIS,WAAJ,CAAhD;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA;AAAhC,MAA0Cd,QAAQ,CACtDI,OADsD,EAEtDC,UAFsD,CAAxD;;AAKA,QAAMU,QAAQ,GAAG,MAAM;AACrBH,IAAAA,UAAU,CAAC,CAAC,IAAII,IAAJ,EAAF,CAAV;AACAN,IAAAA,eAAe,CAACF,WAAD,CAAf;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,QAAQ,EAAEF,QADZ;AAEE,QAAA,OAAO,EAAEK,OAFX;AAGE,QAAA,WAAW,EAAEH,WAHf;AAIE,QAAA,YAAY,EAAEC,YAJhB;AAKE,QAAA,eAAe,EAAEC,eALnB;AAME,QAAA,OAAO,EAAEG,OANX;AAOE,QAAA,KAAK,EAAEC;AAPT;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,eAAD;AACE,QAAA,UAAU,EAAEP,UADd;AAEE,QAAA,YAAY,EAAEE,YAFhB;AAGE,QAAA,OAAO,EAAEL,OAHX;AAIE,QAAA,QAAQ,EAAEW;AAJZ;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAvCM;;GAAMZ,W;UAQqCH,Q;;;KARrCG,W","sourcesContent":["import { useState } from 'react';\nimport { Record } from '../../interfaces/RecordEntities';\nimport { RecordIndexProps } from '../../interfaces/PagesProps';\nimport { useFetch } from '../../hooks/useFetch';\nimport { RecordList } from './List';\nimport { RecordMutations } from './Mutations';\n\nexport const RecordIndex = <T extends Record>({\n  apiPath,\n  apiOptions,\n  ListItem,\n  FormFields,\n  emptyRecord,\n}: RecordIndexProps<T>) => {\n  const [activeRecord, setActiveRecord] = useState<T>(emptyRecord);\n  const { records, setVersion, loading, error } = useFetch<T>(\n    apiPath,\n    apiOptions\n  );\n\n  const callback = () => {\n    setVersion(+new Date());\n    setActiveRecord(emptyRecord);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"content\">\n        <RecordList<T>\n          ListItem={ListItem}\n          records={records}\n          emptyRecord={emptyRecord}\n          activeRecord={activeRecord}\n          setActiveRecord={setActiveRecord}\n          loading={loading}\n          error={error}\n        />\n        <RecordMutations<T>\n          FormFields={FormFields}\n          activeRecord={activeRecord}\n          apiPath={apiPath}\n          callback={callback}\n        />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const useForm = (initialState, handleAction) => {\n  _s();\n\n  const [formState, setFormState] = useState(initialState);\n\n  const handleChange = event => {\n    const {\n      tagName,\n      name,\n      value\n    } = event.target;\n    const parsedValue = tagName === 'SELECT' && value === '' ? null : value;\n    setFormState({ ...formState,\n      [name]: parsedValue\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleAction(formState);\n  };\n\n  return {\n    formState,\n    setFormState,\n    handleChange,\n    handleSubmit\n  };\n};\n\n_s(useForm, \"NCrDsV2MnWH0uYX3PTu/S+Q0rXo=\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/src/hooks/useForm.ts"],"names":["useState","useForm","initialState","handleAction","formState","setFormState","handleChange","event","tagName","name","value","target","parsedValue","handleSubmit","preventDefault"],"mappings":";;AAAA,SAAeA,QAAf,QAA8B,OAA9B;AAQA,OAAO,MAAMC,OAAO,GAAG,CAAIC,YAAJ,EAAqBC,YAArB,KAAiD;AAAA;;AACpE,QAAM,CAACC,SAAD,EAAaC,YAAb,IAA6BL,QAAQ,CAAIE,YAAJ,CAA3C;;AAEA,QAAMI,YAAY,GAAIC,KAAD,IAAoD;AACrE,UAAM;AAAEC,MAAAA,OAAF;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,QAA4BH,KAAK,CAACI,MAAxC;AACA,UAAMC,WAAW,GAAGJ,OAAO,KAAK,QAAZ,IAAwBE,KAAK,KAAK,EAAlC,GAAuC,IAAvC,GAA8CA,KAAlE;AACAL,IAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,OAACK,IAAD,GAAQG;AAAvB,KAAD,CAAZ;AACH,GAJD;;AAMA,QAAMC,YAAY,GAAIN,KAAD,IAAmD;AACpEA,IAAAA,KAAK,CAACO,cAAN;AACAX,IAAAA,YAAY,CAACC,SAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AAAEA,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,YAA3B;AAAyCO,IAAAA;AAAzC,GAAP;AACH,CAfM;;GAAMZ,O","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Action } from \"./useMutation\";\r\n\r\nexport type IChangeElement =\r\n| HTMLInputElement\r\n| HTMLSelectElement\r\n| HTMLTextAreaElement;\r\n\r\nexport const useForm = <T>(initialState: T, handleAction: Action<T>) => {\r\n    const [formState , setFormState] = useState<T>(initialState);\r\n\r\n    const handleChange = (event: React.ChangeEvent<IChangeElement>): void => {\r\n        const { tagName , name, value } = event.target;\r\n        const parsedValue = tagName === 'SELECT' && value === '' ? null : value;\r\n        setFormState({...formState, [name]: parsedValue});\r\n    };\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\r\n        event.preventDefault();\r\n        handleAction(formState);\r\n    }\r\n\r\n    return { formState, setFormState, handleChange, handleSubmit }\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Crud-com-React--Typescript-e-React\\\\src\\\\pages\\\\Record\\\\Mutations.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { RecordNew } from './New';\nimport { RecordEdit } from './Edit';\nimport { useMutation } from '../../hooks/useMutation';\nimport { Status } from '../../components/Status';\nimport { RecordError } from '../../components/RecordError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecordMutations = ({\n  FormFields,\n  activeRecord,\n  apiPath,\n  callback\n}) => {\n  _s();\n\n  const {\n    create,\n    update,\n    remove,\n    processing,\n    success,\n    error,\n    setError\n  } = useMutation(apiPath, callback);\n  useEffect(() => {\n    if (activeRecord.id) {\n      setError(undefined);\n    }\n  }, [activeRecord, setError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mutations\",\n    children: [error && /*#__PURE__*/_jsxDEV(RecordError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this), activeRecord.id ? /*#__PURE__*/_jsxDEV(RecordEdit, {\n      FormFields: FormFields,\n      activeRecord: activeRecord,\n      update: update,\n      remove: remove,\n      success: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RecordNew, {\n      FormFields: FormFields,\n      activeRecord: activeRecord,\n      create: create,\n      success: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), processing && /*#__PURE__*/_jsxDEV(Status, {\n      text: \"processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecordMutations, \"VaXhfNyiwE7bubykHDMgRm5hbNM=\", false, function () {\n  return [useMutation];\n});\n\n_c = RecordMutations;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordMutations\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/src/pages/Record/Mutations.tsx"],"names":["useEffect","RecordNew","RecordEdit","useMutation","Status","RecordError","RecordMutations","FormFields","activeRecord","apiPath","callback","create","update","remove","processing","success","error","setError","id","undefined"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAGA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAmB;AAC9CC,EAAAA,UAD8C;AAE9CC,EAAAA,YAF8C;AAG9CC,EAAAA,OAH8C;AAI9CC,EAAAA;AAJ8C,CAAnB,KAKA;AAAA;;AAC7B,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA;AAPI,MAQFd,WAAW,CAAIM,OAAJ,EAAaC,QAAb,CARf;AAUAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,YAAY,CAACU,EAAjB,EAAqB;AACnBD,MAAAA,QAAQ,CAACE,SAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACX,YAAD,EAAeS,QAAf,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACGD,KAAK,iBAAG,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YADX,EAEGR,YAAY,CAACU,EAAb,gBACC,QAAC,UAAD;AACA,MAAA,UAAU,EAAEX,UADZ;AAEA,MAAA,YAAY,EAAEC,YAFd;AAGA,MAAA,MAAM,EAAEI,MAHR;AAIA,MAAA,MAAM,EAAEC,MAJR;AAKA,MAAA,OAAO,EAAEE;AALT;AAAA;AAAA;AAAA;AAAA,YADD,gBASC,QAAC,SAAD;AACA,MAAA,UAAU,EAAER,UADZ;AAEA,MAAA,YAAY,EAAEC,YAFd;AAGA,MAAA,MAAM,EAAEG,MAHR;AAIA,MAAA,OAAO,EAAEI;AAJT;AAAA;AAAA;AAAA;AAAA,YAXJ,EAkBGD,UAAU,iBAAI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAlBjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA5CM;;GAAMR,e;UAcPH,W;;;KAdOG,e","sourcesContent":["import { useEffect } from 'react';\r\nimport { Record } from '../../interfaces/RecordEntities';\r\nimport { RecordMutationsProps } from '../../interfaces/PagesProps';\r\nimport { RecordNew } from './New';\r\nimport { RecordEdit } from './Edit';\r\nimport { useMutation } from '../../hooks/useMutation';\r\nimport { Status } from '../../components/Status';\r\nimport { RecordError } from '../../components/RecordError';\r\n\r\nexport const RecordMutations = <T extends Record>({\r\n    FormFields,\r\n    activeRecord,\r\n    apiPath,\r\n    callback,\r\n}: RecordMutationsProps<T>) => {\r\n  const { \r\n    create, \r\n    update, \r\n    remove,\r\n    processing,\r\n    success,\r\n    error,\r\n    setError\r\n  } = useMutation<T>(apiPath, callback);\r\n\r\n  useEffect(() => {\r\n    if (activeRecord.id) {\r\n      setError(undefined);\r\n    }\r\n  }, [activeRecord, setError]);\r\n\r\n  return (\r\n    <div className=\"mutations\">\r\n      {error &&<RecordError error={error}/>}\r\n      {activeRecord.id ? (\r\n        <RecordEdit<T> \r\n        FormFields={FormFields} \r\n        activeRecord={activeRecord}\r\n        update={update}\r\n        remove={remove}\r\n        success={success}\r\n        />\r\n      ) : (\r\n        <RecordNew<T> \r\n        FormFields={FormFields} \r\n        activeRecord={activeRecord}\r\n        create={create}\r\n        success={success}\r\n        />\r\n      )}\r\n      {processing && <Status text=\"processing...\"/>}\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}
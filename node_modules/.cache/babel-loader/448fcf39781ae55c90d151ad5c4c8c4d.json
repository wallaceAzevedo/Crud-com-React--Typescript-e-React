{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Crud-com-React--Typescript-e-React\\\\src\\\\components\\\\RecordError.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecordError = ({\n  error\n}) => {\n  var _error$response, _error$response$data, _error$response2, _error$response3;\n\n  const validationErrors = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.validation;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), \" \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"URL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \" \", error.config.url]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.message) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), \" \", (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), validationErrors && validationErrors.map((error, errorKey) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: error.constraints && Object.values(error.constraints).map((constraint, constraintKey) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: constraint\n      }, constraintKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this))\n    }, errorKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = RecordError;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordError\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/src/components/RecordError.tsx"],"names":["RecordError","error","validationErrors","response","data","validation","message","config","url","map","errorKey","constraints","Object","values","constraint","constraintKey"],"mappings":";;AAOA,OAAO,MAAMA,WAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC1D,QAAMC,gBAAgB,GAAGD,KAAH,aAAGA,KAAH,0CAAGA,KAAK,CAAEE,QAAV,4EAAG,gBAAiBC,IAApB,yDAAG,qBACrBC,UADJ;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,OACmBJ,KAAK,CAACK,OADzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,OACeL,KAAK,CAACM,MAAN,CAAaC,GAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAOG,qBAAAP,KAAK,CAACE,QAAN,sEAAgBC,IAAhB,CAAqBE,OAArB,kBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,2BACmBL,KAAK,CAACE,QADzB,qDACmB,iBAAgBC,IAAhB,CAAqBE,OADxC;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,EAYGJ,gBAAgB,IACfA,gBAAgB,CAACO,GAAjB,CAAqB,CAACR,KAAD,EAAQS,QAAR,kBACnB;AAAA,gBACGT,KAAK,CAACU,WAAN,IACCC,MAAM,CAACC,MAAP,CACEZ,KAAK,CAACU,WADR,EAEEF,GAFF,CAEM,CAACK,UAAD,EAAaC,aAAb,kBACJ;AAAA,kBAAyBD;AAAzB,SAASC,aAAT;AAAA;AAAA;AAAA;AAAA,cAHF;AAFJ,OAASL,QAAT;AAAA;AAAA;AAAA;AAAA,YADF,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA9BM;KAAMV,W","sourcesContent":["import { AxiosError } from 'axios';\r\nimport { ValidationError } from 'class-validator';\r\n\r\ninterface IProps {\r\n  error: AxiosError;\r\n}\r\n\r\nexport const RecordError: React.FC<IProps> = ({ error }) => {\r\n  const validationErrors = error?.response?.data\r\n    ?.validation as ValidationError[];\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      <div>\r\n        <b>Message:</b> {error.message}\r\n      </div>\r\n      <div>\r\n        <b>URL:</b> {error.config.url}\r\n      </div>\r\n      {error.response?.data.message && (\r\n        <div>\r\n          <b>Details:</b> {error.response?.data.message}\r\n        </div>\r\n      )}\r\n      {validationErrors &&\r\n        validationErrors.map((error, errorKey) => (\r\n          <ul key={errorKey}>\r\n            {error.constraints &&\r\n              Object.values(\r\n                error.constraints\r\n              ).map((constraint, constraintKey) => (\r\n                <li key={constraintKey}>{constraint}</li>\r\n              ))}\r\n          </ul>\r\n        ))}\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}
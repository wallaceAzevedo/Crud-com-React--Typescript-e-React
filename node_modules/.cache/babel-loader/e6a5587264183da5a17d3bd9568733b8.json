{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'axios';import{useState,useEffect}from'react';export var useFeth=function useFeth(path,options){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),records=_useState2[0],setRecords=_useState2[1];var _useState3=useState(+new Date()),_useState4=_slicedToArray(_useState3,2),version=_useState4[0],setVersion=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var url=\"\".concat(process.env.REACT_APP_API,\"/\").concat(path);useEffect(function(){var callFetcthFuction=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.prev=1;_context.next=4;return axios.get(url,{params:options});case 4:res=_context.sent;setRecords(res.data);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);setError(_context.t0);case 11:setLoading(false);case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function callFetcthFuction(){return _ref.apply(this,arguments);};}();callFetcthFuction();},[url,options,version]);return{records:records,setVersion:setVersion,loading:loading,error:error};};","map":{"version":3,"sources":["C:/Users/User/Desktop/Crud-com-React--Typescript-e-React/src/hooks/useFetch.ts"],"names":["axios","useState","useEffect","useFeth","path","options","records","setRecords","Date","version","setVersion","loading","setLoading","error","setError","url","process","env","REACT_APP_API","callFetcthFuction","get","params","res","data"],"mappings":"0gBAAA,MAAOA,CAAAA,KAAP,KAAkC,OAAlC,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAGA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAmBC,IAAnB,CAAiCC,OAAjC,CAAkD,CACrE,cAA8BJ,QAAQ,CAAM,EAAN,CAAtC,wCAAOK,OAAP,eAAgBC,UAAhB,eACA,eAA6BN,QAAQ,CAAC,CAAC,GAAIO,CAAAA,IAAJ,EAAF,CAArC,yCAAOC,OAAP,eAAgBC,UAAhB,eACA,eAA8BT,QAAQ,CAAU,KAAV,CAAtC,yCAAOU,OAAP,eAAgBC,UAAhB,eACA,eAA0BX,QAAQ,EAAlC,yCAAOY,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,GAAG,WAAMC,OAAO,CAACC,GAAR,CAAYC,aAAlB,aAAmCd,IAAnC,CAAT,CAEAF,SAAS,CAAC,UAAM,CACZ,GAAMiB,CAAAA,iBAAiB,0FAAG,2IACtBP,UAAU,CAAC,IAAD,CAAV,CADsB,sCAGCZ,CAAAA,KAAK,CAACoB,GAAN,CAAeL,GAAf,CAAoB,CAAEM,MAAM,CAAEhB,OAAV,CAApB,CAHD,QAGZiB,GAHY,eAIlBf,UAAU,CAACe,GAAG,CAACC,IAAL,CAAV,CAJkB,+EAMlBT,QAAQ,aAAR,CANkB,QAQtBF,UAAU,CAAC,KAAD,CAAV,CARsB,oEAAH,kBAAjBO,CAAAA,iBAAiB,0CAAvB,CAUAA,iBAAiB,GACpB,CAZQ,CAYL,CAACJ,GAAD,CAAMV,OAAN,CAAeI,OAAf,CAZK,CAAT,CAaA,MAAO,CAAEH,OAAO,CAAPA,OAAF,CAAWI,UAAU,CAAVA,UAAX,CAAuBC,OAAO,CAAPA,OAAvB,CAAgCE,KAAK,CAALA,KAAhC,CAAP,CACH,CAtBM","sourcesContent":["import axios, { AxiosError } from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport {Record} from '../interfaces/RecordEntities';\r\n\r\nexport const useFeth = <T extends Record>(path: string, options?: {}) => {\r\n    const [records, setRecords] = useState<T[]>([]);\r\n    const [version, setVersion] =useState(+new Date());\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<AxiosError>();\r\n\r\n    const url = `${process.env.REACT_APP_API}/${path}`;\r\n\r\n    useEffect(() => {\r\n        const callFetcthFuction = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const res = await  axios.get<T[]>(url, { params: options });\r\n                setRecords(res.data);\r\n            } catch (e){\r\n                setError(e as AxiosError);\r\n            }\r\n            setLoading(false);\r\n        };\r\n        callFetcthFuction();\r\n    },  [url, options, version]);\r\n    return { records, setVersion, loading, error };\r\n};"]},"metadata":{},"sourceType":"module"}